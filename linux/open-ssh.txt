
$ sudo apt-get update
$ sudo apt-get install openssh-server


sudo vim /etc/ssh/sshd_config

В первую очередь найдите эту строку и если хотите, то замените стандартный порт 22 на любой другой, рекомендуется для защиты от интернет атак.

Port 22
Также для того чтобы OpenSSH слушал только определенные ip адресса, допустим 192.168.0.50, 192.168.0.51 на порту 777,  то просто добавьте следующие строчки:

Port 777
ListenAddress 192.168.0.50
ListenAddress 192.168.0.51
Используйте только второй протокол SSH, проверьте, что подобная строка имеет место:

Protocol 2
Также, для большей безопасности, рекомендуется в строке PermitRootLogin заменить yes на no, запретив тем самым вход по ssh используя root:

PermitRootLogin yes
Дать доступ к системе через SSH только ограниченным пользователям: root, pi

AllowUsers root pi
Ограничить доступ через SSH для пользователей: test test2 test3

DenyUsers test test2 test3
Выставляем таймаут в случае бездействия пользователя. Здесь выставлено время бездействия в секундах 600 с = 10 мин., по истечении этого времени сессия пользователя будет закрыта, и произойдет обрыв связи.

ClientAliveInterval 600
ClientAliveCountMax 0
OpenSSH сервер может использовать протокол Rlogin для авторизации и может имитировать поведение устаревшей комманды rsh, по этому отключите чтение пользовательских файлов ~/.rhosts и ~/.shosts:

IgnoreRhosts yes
Отключите аутентификацию на основе хоста

HostbasedAuthentication no
Включите предупреждающий баннер отредактировав следующую строку и создания соотв. файла:

Banner /etc/issue
Можно запретить удаленный доступ для юзеров с пустыми паролями:

PermitEmptyPasswords no
Сохраняйте логи, удостоверьтесь что директива LogLevel имеет значение INFO или DEBUG

LogLevel INFO
Перезапуск сервера OpenSSH

После изменения в /etc/ssh/sshd_config, необходимо перезагрузить ssh-сервер.

Чтобы перезапустить OpenSSH на Ubuntu или Debian:

$ sudo /etc/init.d/ssh restart
(или )
$ sudo service ssh restart
